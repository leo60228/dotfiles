#!/usr/bin/env bash
# Does post-processing on G-code files generated by Slic3r, assuming it has been
# configured with my custom G-code snippets.
# 1. Runs the dualstrusion post-processing script if the file has the start G-code
#    for this script. You can find this script at:
#    https://www.dr-lex.be/info-stuff/print3d-dualstrusion.html
# 2. Fixes incorrect temperature command for single extrusion prints.
# 3. Optionally applies my retraction improver hack.
# 4. Sends the G-code file through GPX to produce an x3g file.
# Should be called with only a single argument: the G-code file.
# To disable all post-processing scripts and merely invoke GPX, add '-P' as
#   first argument.
#
# Version: 20171218
# Alexander Thomas a.k.a. DrLex, https://www.dr-lex.be/
# Released under Creative Commons Attribution 4.0 International license.

#### Modify the following values to match your setup: ####

# Path to the gpx binary. This binary must list 'fcp' as one of the allowed
# values for the -m argument. Find another version if yours does not.
GPX=/home/leo60228/.nix-profile/bin/gpx

# The following settings are optional and will be silently ignored if the paths
# do not point to executable files. You don't need to explicitly comment them
# out if you're not using these extra post-processing scripts.

# Path to the executable dualstrusion post-processing script.
DUALSTRUDE_SCRIPT=/Users/athomas/bin/dualstrusion-postproc.pl

# Path to the experimental retraction improver script.
# (Note: you probably don't have this script because I haven't released it yet,
# and I'm not sure if I ever will because it is a hideous hack).
RETRACT_SCRIPT=/Users/athomas/bin/retraction-improver.pl

# Set this to 1 to always keep a backup of the unprocessed gcode file,
# regardless of -k option (useful for debugging).
KEEP_ORIG=0

############ No user serviceable parts below ############

function usage
{
	echo "$0 [-Ppk] input.gcode"
	echo "Processes G-code file for the FFCP with GPX, after optionally applying certain fixes."
	echo "Output will be written to a file with the same name and .x3g extension."
	echo "Options:"
	echo "  -P: disables all postprocessing, including the -p option of GPX."
	echo "  -p: enable -p option of GPX even if -P is used."
	echo "  -k: keep copy of original file."
}

while getopts ':hPpk' opt; do
	case $opt in
		h)
			usage
			exit
			;;
		P)
			no_postproc=1
			;;
		p)
			force_progress=1
			;;
		k)
			KEEP_ORIG=1
			;;
		\?)
			echo "Ignoring unknown option: -$OPTARG" >&2
			;;
	esac
done

shift $((OPTIND-1))
if [ -z "$1" ]; then
	echo "Error: argument should be the path to a .gcode file" >&2
	usage
	exit 2
fi

arg_p=''
# Do not use sed, sed in OS X stinks.
origfile=$(echo "$1" | perl -pe 's/\.gcode$/_orig.gcode/i')

if [ -z "$no_postproc" ]; then
	if [ "$KEEP_ORIG" == "1" ]; then
		cp -p "$1" "${origfile}"
	fi
	if [ -x "$DUALSTRUDE_SCRIPT" ] && grep -q 'FOR USE IN COMBINATION WITH DUALSTRUSION POST-PROCESSING SCRIPT .*ONLY' "$1" 2>/dev/null; then
		# Post-process the file with the magical dualstrusion enhancer script.
		echo "Post-processing dualstrusion file..."
		tempfile=$(mktemp)
		tempfail=$(mktemp)
		if ! "${DUALSTRUDE_SCRIPT}" "$1" > "${tempfile}" 2> "${tempfail}"; then
			rm -f "${tempfile}"
			chmod 644 "${tempfail}"
			mv "${tempfail}" "$1-FAIL.txt"
			exit 1
		fi
		rm -f "${tempfail}"
		mv "${tempfile}" "$1"
		chmod 644 "$1"
	elif grep -qE ';- - - Custom G-code for (left|right) extruder printing' "$1" 2>/dev/null; then
		# Work around bug in Slic3r that always causes T0 to be heated if the second layer has a
		# different filament temperature. See https://github.com/alexrj/Slic3r/issues/4003
		# This hack simply wipes the T argument, which works by the grace of how GPX processes the commands.
		if grep -qE '^M104 S.+ T.+; set temperature$' "$1"; then
			# I am entirely relying here on the assumption that any version of Slic3r will
			# keep on printing the code with a comment exactly like this.
			echo "Fixing incorrect M104 command for single-extrusion setup"
			perl -pi.trashme -e 's/^M104 S(\S+) (T.*); set temperature$/M104 S$1 ; POSTPROCESS FIX: $2 ARGUMENT REMOVED/' "$1"
			rm -f "$1.trashme"
		fi
	fi

	if grep -qE '^M83(;| |$)' "$1"; then
		# Workaround for issue #60 in gCodeViewer (gcode.ws) that messes up rendering if an M83 is followed by a G90.
		# Again, I'm assuming Slic3r will always print the line exactly like this:
		perl -pi.trashme -e 's/^(G90 ; use absolute coordinates)$/$1\nM83; POSTPROCESS workaround for relative E in gcode.ws/' "$1"
		rm -f "$1.trashme"
	fi

	if [ -x "$RETRACT_SCRIPT" ]; then
		warnings=$($RETRACT_SCRIPT "$1" 2>&1 >"$1.postproc")  # capture stdout to a file and stderr to a variable
		mv -f "$1.postproc" "$1"
		if [ -n "${warnings}" ]; then
			stripped=$(echo "$1" | perl -pe 's/\.gcode$//i')
			echo "${warnings}" > "${stripped}.WARN.txt"
		fi
	fi
	
	# -p overrides % display with something that better approximates total print time than merely
	# mapping the Z coordinate to a percentage. It still is not perfect but at least gives a sensible
	# ballpark figure. For this to work properly, the start GCode block must end with "M73 P1 ;@body"
	# according to typical cargo cult, although a peek in GPX source code reveals that either M73 P1
	# or @body will work.
	arg_p=' -p'
fi

if [ -n "$force_progress" ]; then
	arg_p=' -p'
fi

"${GPX}" $arg_p -m fcp "$1"
