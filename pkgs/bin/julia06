#!/usr/bin/env nix-shell
#!nix-shell -I nixpkgs=channel:nixos-18.09 -p julia_06 jq bash proot gsettings_desktop_schemas imagemagickBig cairo gettext pango glib gtk3 gdk_pixbuf gzip zlib gcc-unwrapped.lib -i bash
set -e

GTK3_SCHEMA=($(nix path-info nixpkgs.gtk3)/share/gsettings-schemas/*)
GSETTINGS_SCHEMA=($(nix path-info nixpkgs.gsettings_desktop_schemas)/share/gsettings-schemas/*)
export XDG_DATA_DIRS="$XDG_DATA_DIRS:${GSETTINGS_SCHEMA[@]}:${GTK3_SCHEMA[@]}"

# comment out once packaged
NIXLDPATH='[ imagemagickBig cairo gettext pango.out glib.out gtk3 gdk_pixbuf gzip zlib gcc-unwrapped.lib ]'
julia="$(dirname $(which julia))/.."
NIXCODE="with import (builtins.fetchTarball channel:nixos-18.09) {}; lib.makeLibraryPath [ imagemagickBig cairo gettext pango glib gtk3 gdk_pixbuf gzip zlib gcc-unwrapped.lib ]"
ldPath="$(nix eval --raw "($NIXCODE)")"
trueWrapper="$(mktemp)"
trap "{ rm -f $trueWrapper; }" EXIT
printf "#!/bin/sh\n%s" "$(which true)" > $trueWrapper
chmod +x "$trueWrapper"
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:${ldPath}"
PROOT_NO_SECCOMP=1 exec proot -b "${trueWrapper}":/sbin/ldconfig "${julia}/bin/julia" "$@"
