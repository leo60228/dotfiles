diff --git a/runners/calculator/calculatorrunner.cpp b/runners/calculator/calculatorrunner.cpp
index a6ac0d9..09b4d9a 100644
--- a/runners/calculator/calculatorrunner.cpp
+++ b/runners/calculator/calculatorrunner.cpp
@@ -42,14 +42,6 @@ CalculatorRunner::~CalculatorRunner() = default;
 
 void CalculatorRunner::userFriendlySubstitutions(QString &cmd)
 {
-    if (QLocale().decimalPoint() != QLatin1Char('.')) {
-        cmd.replace(QLocale().decimalPoint(), QLatin1String("."), Qt::CaseInsensitive);
-    } else if (!cmd.contains(QLatin1Char('[')) && !cmd.contains(QLatin1Char(']'))) {
-        // If we are sure that the user does not want to use vectors we can replace this char
-        // Especially when switching between locales that use a different decimal separator
-        // this ensures that the results are valid, see BUG: 406388
-        cmd.replace(QLatin1Char(','), QLatin1Char('.'), Qt::CaseInsensitive);
-    }
 }
 
 void CalculatorRunner::match(KRunner::RunnerContext &context)
diff --git a/runners/calculator/qalculate_engine.cpp b/runners/calculator/qalculate_engine.cpp
index 2d2f246..a58ebe2 100644
--- a/runners/calculator/qalculate_engine.cpp
+++ b/runners/calculator/qalculate_engine.cpp
@@ -185,7 +185,7 @@ QString QalculateEngine::evaluate(const QString &expression, bool *isApproximate
     }
 #endif
 
-    MathStructure result = CALCULATOR->calculate(ctext, eo);
+    MathStructure result = CALCULATOR->calculate(CALCULATOR->unlocalizeExpression(ctext), eo);
 
     PrintOptions po;
     po.base = base;
